# Generated by Django 4.1.3 on 2024-03-11 16:57

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import videos.utils


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('mychannel', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Playlist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('visibility', models.CharField(choices=[('Public', 'Public'), ('Private', 'Private')], default='Public', max_length=50)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='PreferredAd',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alcohol', models.BooleanField(default=True)),
                ('dating', models.BooleanField(default=True)),
                ('gambling', models.BooleanField(default=True)),
                ('pregnancy_parenting', models.BooleanField(default=True)),
                ('weight_loss', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='PreferredCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('sub_category', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='ViewingProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_type', models.CharField(choices=[('Basic', 'Basic'), ('Artist', 'Artist'), ('Professionnal', 'Professionnal'), ('Corporate', 'Corporate')], default='Basic', max_length=100)),
                ('night_mode', models.BooleanField(default=False)),
                ('algorithm_decides', models.BooleanField(default=False, help_text="Let's the algorithm decide relevant videos")),
                ('recommend_popular_videos', models.BooleanField(default=False, help_text='Recommend popular videos based on viewing history and currently viewed video')),
                ('performance', models.CharField(choices=[('Auto', 'Auto'), ('1080p', 'P1080'), ('720p', 'P720')], default='Auto', max_length=100)),
                ('playlists_private', models.BooleanField(default=False)),
                ('subscriptions_private', models.BooleanField(default=False)),
                ('personalize_ads', models.BooleanField(default=False)),
                ('preferred_ad', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='preferred_ad', to='videos.preferredad')),
                ('preferred_categories', models.ManyToManyField(blank=True, help_text='Categories the user prefers to watch', related_name='preferred_categories', to='videos.preferredcategory')),
                ('subscriptions', models.ManyToManyField(blank=True, to='videos.subscription')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference', models.CharField(blank=True, max_length=15, unique=True)),
                ('title', models.CharField(max_length=70)),
                ('description', models.TextField(max_length=300)),
                ('video', models.FileField(upload_to=videos.utils.video_directory_path)),
                ('age_restricted', models.BooleanField(default=False)),
                ('category', models.CharField(choices=[('Film and animation', 'Film And Animation'), ('Music', 'Music'), ('Gaming', 'Gaming'), ('Entertainment', 'Entertainment'), ('Fashion', 'Fashion'), ('Beauty', 'Beauty')], default='Entertainment', max_length=50)),
                ('visibility', models.CharField(choices=[('Public', 'Public'), ('Private', 'Private')], default='Public', max_length=50)),
                ('recording_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('recording_location', models.CharField(blank=True, max_length=100, null=True)),
                ('recording_language', models.CharField(choices=[('French', 'French'), ('English', 'English')], default='English', max_length=50)),
                ('comment_strategy', models.CharField(choices=[('Allow all comments', 'Allow All Comments'), ('Hold all comments for review', 'Hold For Review'), ('Disable all comments', 'Disable All')], default='Allow all comments', max_length=150)),
                ('ratings_are_visible', models.BooleanField(default=True)),
                ('views', models.PositiveIntegerField(default=0)),
                ('active', models.BooleanField(default=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('channel_playlist', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mychannel.channelplaylist')),
                ('tags', models.ManyToManyField(blank=True, to='videos.tag')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('user_channel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='mychannel.userchannel')),
            ],
            options={
                'ordering': ['-pk', 'created_on'],
            },
        ),
        migrations.AddIndex(
            model_name='tag',
            index=models.Index(fields=['name'], name='videos_tag_name_a00f01_idx'),
        ),
        migrations.AddField(
            model_name='playlist',
            name='user',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='playlist',
            name='videos',
            field=models.ManyToManyField(blank=True, to='videos.video'),
        ),
        migrations.AddConstraint(
            model_name='viewingprofile',
            constraint=models.UniqueConstraint(fields=('user', 'preferred_ad'), name='one_preferred_ad_by_user'),
        ),
        migrations.AddIndex(
            model_name='video',
            index=models.Index(fields=['title', 'category'], name='videos_vide_title_dd8d3a_idx'),
        ),
        migrations.AddIndex(
            model_name='playlist',
            index=models.Index(fields=['name', 'user', 'visibility'], name='videos_play_name_6f3ef1_idx'),
        ),
    ]
